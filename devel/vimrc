
call plug#begin('~/.vim/plugged')
	Plug 'fxn/vim-monochrome'
	Plug 'christoomey/vim-system-copy'
	Plug 'prabirshrestha/vim-lsp'
	Plug 'prabirshrestha/asyncomplete.vim'
	Plug 'prabirshrestha/asyncomplete-lsp.vim'
call plug#end()

let g:system_copy#copy_command='xclip -sel clipboard'
let g:system_copy#paste_command='xclip -sel clipboard -o'
let g:system_copy_silent = 1

if executable('ccls')
   au User lsp_setup call lsp#register_server({
      \ 'name': 'ccls',
      \ 'cmd': {server_info->['ccls']},
      \ 'root_uri': {server_info->lsp#utils#path_to_uri(lsp#utils#find_nearest_parent_file_directory(lsp#utils#get_buffer_path(), 'compile_commands.json'))},
      \ 'initialization_options': {'cache': {'directory': expand('/tmp/ccls-cache') }},
      \ 'whitelist': ['c', 'cpp', 'objc', 'objcpp', 'cc'],
      \ })
endif

colorscheme monochrome
syntax on
set path+=**
set showtabline=1
set foldignore=
set laststatus=1
set tabstop=5
set shiftwidth=5
set smarttab
set autoindent
set number
set norelativenumber
set noswapfile 
set hlsearch
set incsearch
set linebreak
set background=dark
set foldmethod=indent
set nofoldenable
set cursorline
set noexpandtab
set nocompatible
set nopaste
set ttimeout
set ttimeoutlen=10
set listchars=tab:>-,space:·,eol:~
set fileencoding=utf-8
set encoding=utf-8
set termencoding=utf-8
set langmap=ФИСВУАПРШОЛДЬТЩЗЙКЫЕГМЦЧНЯ;ABCDEFGHIJKLMNOPQRSTUVWXYZ,фисвуапршолдьтщзйкыегмцчня;abcdefghijklmnopqrstuvwxyz

noremap ,S :set spell! spelllang=en,ru<CR>
noremap ,w :set list!<cr>
noremap ,p :set paste!<cr>
noremap ,c :execute "set colorcolumn=" . (&colorcolumn == "" ? "80" : "")<cr>
noremap gd :LspDefinition<cr>

highlight TabLine ctermbg=none ctermfg=blue cterm=none
highlight TabLineFill ctermbg=none ctermfg=grey cterm=none
highlight TabLineSel ctermbg=blue ctermfg=black cterm=none
highlight search cterm=underline ctermbg=none
highlight incsearch cterm=underline ctermbg=none
highlight cursorline ctermfg=none ctermbg=none cterm=none
highlight colorcolumn ctermbg=blue
highlight folded ctermfg=grey ctermbg=none
highlight markdownError guifg=NONE guibg=black

" return to the same line you left off at
augroup line_return
	au!
	au BufReadPost *
		\ if line("'\"") > 0 && line("'\"") <= line("$") |
		\	execute 'normal! g`"zvzz' |
		\ endif
augroup END

